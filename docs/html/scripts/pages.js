var pages = [{"name":"class UnexpectedException(message: String) : Error","description":"io.github.xf8b.utils.exceptions.UnexpectedException","location":"utils/io.github.xf8b.utils.exceptions/-unexpected-exception/index.html","searchKeys":["UnexpectedException","class UnexpectedException(message: String) : Error"]},{"name":"fun UnexpectedException(message: String = \"unexpected\")","description":"io.github.xf8b.utils.exceptions.UnexpectedException.UnexpectedException","location":"utils/io.github.xf8b.utils.exceptions/-unexpected-exception/-unexpected-exception.html","searchKeys":["UnexpectedException","fun UnexpectedException(message: String = \"unexpected\")"]},{"name":"class Result<out T>(result: T?, errorMessage: String?, resultType: Result.ResultType)","description":"io.github.xf8b.utils.optional.Result","location":"utils/io.github.xf8b.utils.optional/-result/index.html","searchKeys":["Result","class Result<out T>(result: T?, errorMessage: String?, resultType: Result.ResultType)"]},{"name":"fun <out T> Result(result: T?, errorMessage: String?, resultType: Result.ResultType)","description":"io.github.xf8b.utils.optional.Result.Result","location":"utils/io.github.xf8b.utils.optional/-result/-result.html","searchKeys":["Result","fun <out T> Result(result: T?, errorMessage: String?, resultType: Result.ResultType)"]},{"name":"object Companion","description":"io.github.xf8b.utils.optional.Result.Companion","location":"utils/io.github.xf8b.utils.optional/-result/-companion/index.html","searchKeys":["Companion","object Companion"]},{"name":"object Companion","description":"io.github.xf8b.utils.semver.SemanticVersion.Companion","location":"utils/io.github.xf8b.utils.semver/-semantic-version/-companion/index.html","searchKeys":["Companion","object Companion"]},{"name":"fun <T> failure(errorMessage: String): Result<T>","description":"io.github.xf8b.utils.optional.Result.Companion.failure","location":"utils/io.github.xf8b.utils.optional/-result/-companion/failure.html","searchKeys":["failure","fun <T> failure(errorMessage: String): Result<T>"]},{"name":"fun <T> pass(): Result<T>","description":"io.github.xf8b.utils.optional.Result.Companion.pass","location":"utils/io.github.xf8b.utils.optional/-result/-companion/pass.html","searchKeys":["pass","fun <T> pass(): Result<T>"]},{"name":"fun <T> success(result: T): Result<T>","description":"io.github.xf8b.utils.optional.Result.Companion.success","location":"utils/io.github.xf8b.utils.optional/-result/-companion/success.html","searchKeys":["success","fun <T> success(result: T): Result<T>"]},{"name":"enum ResultType : Enum<Result.ResultType> ","description":"io.github.xf8b.utils.optional.Result.ResultType","location":"utils/io.github.xf8b.utils.optional/-result/-result-type/index.html","searchKeys":["ResultType","enum ResultType : Enum<Result.ResultType> "]},{"name":"FAILURE()","description":"io.github.xf8b.utils.optional.Result.ResultType.FAILURE","location":"utils/io.github.xf8b.utils.optional/-result/-result-type/-f-a-i-l-u-r-e/index.html","searchKeys":["FAILURE","FAILURE()"]},{"name":"val name: String","description":"io.github.xf8b.utils.optional.Result.ResultType.FAILURE.name","location":"utils/io.github.xf8b.utils.optional/-result/-result-type/-f-a-i-l-u-r-e/name.html","searchKeys":["name","val name: String"]},{"name":"val name: String","description":"io.github.xf8b.utils.optional.Result.ResultType.PASS.name","location":"utils/io.github.xf8b.utils.optional/-result/-result-type/-p-a-s-s/name.html","searchKeys":["name","val name: String"]},{"name":"val name: String","description":"io.github.xf8b.utils.optional.Result.ResultType.SUCCESS.name","location":"utils/io.github.xf8b.utils.optional/-result/-result-type/-s-u-c-c-e-s-s/name.html","searchKeys":["name","val name: String"]},{"name":"val ordinal: Int","description":"io.github.xf8b.utils.optional.Result.ResultType.FAILURE.ordinal","location":"utils/io.github.xf8b.utils.optional/-result/-result-type/-f-a-i-l-u-r-e/ordinal.html","searchKeys":["ordinal","val ordinal: Int"]},{"name":"val ordinal: Int","description":"io.github.xf8b.utils.optional.Result.ResultType.PASS.ordinal","location":"utils/io.github.xf8b.utils.optional/-result/-result-type/-p-a-s-s/ordinal.html","searchKeys":["ordinal","val ordinal: Int"]},{"name":"val ordinal: Int","description":"io.github.xf8b.utils.optional.Result.ResultType.SUCCESS.ordinal","location":"utils/io.github.xf8b.utils.optional/-result/-result-type/-s-u-c-c-e-s-s/ordinal.html","searchKeys":["ordinal","val ordinal: Int"]},{"name":"PASS()","description":"io.github.xf8b.utils.optional.Result.ResultType.PASS","location":"utils/io.github.xf8b.utils.optional/-result/-result-type/-p-a-s-s/index.html","searchKeys":["PASS","PASS()"]},{"name":"SUCCESS()","description":"io.github.xf8b.utils.optional.Result.ResultType.SUCCESS","location":"utils/io.github.xf8b.utils.optional/-result/-result-type/-s-u-c-c-e-s-s/index.html","searchKeys":["SUCCESS","SUCCESS()"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.github.xf8b.utils.optional.Result.equals","location":"utils/io.github.xf8b.utils.optional/-result/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"io.github.xf8b.utils.semver.SemanticVersion.equals","location":"utils/io.github.xf8b.utils.semver/-semantic-version/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean"]},{"name":"val errorMessage: String?","description":"io.github.xf8b.utils.optional.Result.errorMessage","location":"utils/io.github.xf8b.utils.optional/-result/error-message.html","searchKeys":["errorMessage","val errorMessage: String?"]},{"name":"open override fun hashCode(): Int","description":"io.github.xf8b.utils.optional.Result.hashCode","location":"utils/io.github.xf8b.utils.optional/-result/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int"]},{"name":"open override fun hashCode(): Int","description":"io.github.xf8b.utils.semver.SemanticVersion.hashCode","location":"utils/io.github.xf8b.utils.semver/-semantic-version/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int"]},{"name":"fun isFailure(): Boolean","description":"io.github.xf8b.utils.optional.Result.isFailure","location":"utils/io.github.xf8b.utils.optional/-result/is-failure.html","searchKeys":["isFailure","fun isFailure(): Boolean"]},{"name":"fun isPass(): Boolean","description":"io.github.xf8b.utils.optional.Result.isPass","location":"utils/io.github.xf8b.utils.optional/-result/is-pass.html","searchKeys":["isPass","fun isPass(): Boolean"]},{"name":"fun isSuccess(): Boolean","description":"io.github.xf8b.utils.optional.Result.isSuccess","location":"utils/io.github.xf8b.utils.optional/-result/is-success.html","searchKeys":["isSuccess","fun isSuccess(): Boolean"]},{"name":"val result: T?","description":"io.github.xf8b.utils.optional.Result.result","location":"utils/io.github.xf8b.utils.optional/-result/result.html","searchKeys":["result","val result: T?"]},{"name":"val resultType: Result.ResultType","description":"io.github.xf8b.utils.optional.Result.resultType","location":"utils/io.github.xf8b.utils.optional/-result/result-type.html","searchKeys":["resultType","val resultType: Result.ResultType"]},{"name":"open override fun toString(): String","description":"io.github.xf8b.utils.optional.Result.toString","location":"utils/io.github.xf8b.utils.optional/-result/to-string.html","searchKeys":["toString","open override fun toString(): String"]},{"name":"open override fun toString(): String","description":"io.github.xf8b.utils.semver.SemanticVersion.toString","location":"utils/io.github.xf8b.utils.semver/-semantic-version/to-string.html","searchKeys":["toString","open override fun toString(): String"]},{"name":"fun <T> Optional<T>.toNullable(): T?","description":"io.github.xf8b.utils.optional.toNullable","location":"utils/io.github.xf8b.utils.optional/to-nullable.html","searchKeys":["toNullable","fun <T> Optional<T>.toNullable(): T?"]},{"name":"fun <T> Pair<Optional<T>, Optional<String>>.toResult(): Result<T>","description":"io.github.xf8b.utils.optional.toResult","location":"utils/io.github.xf8b.utils.optional/to-result.html","searchKeys":["toResult","fun <T> Pair<Optional<T>, Optional<String>>.toResult(): Result<T>"]},{"name":"fun <T> Optional<T>.toValueOrNull(): T?","description":"io.github.xf8b.utils.optional.toValueOrNull","location":"utils/io.github.xf8b.utils.optional/to-value-or-null.html","searchKeys":["toValueOrNull","fun <T> Optional<T>.toValueOrNull(): T?"]},{"name":"class SemanticVersion(version: String)","description":"io.github.xf8b.utils.semver.SemanticVersion","location":"utils/io.github.xf8b.utils.semver/-semantic-version/index.html","searchKeys":["SemanticVersion","class SemanticVersion(version: String)"]},{"name":"fun SemanticVersion(version: String)","description":"io.github.xf8b.utils.semver.SemanticVersion.SemanticVersion","location":"utils/io.github.xf8b.utils.semver/-semantic-version/-semantic-version.html","searchKeys":["SemanticVersion","fun SemanticVersion(version: String)"]},{"name":"const val SEMVER_REGEX: String","description":"io.github.xf8b.utils.semver.SemanticVersion.Companion.SEMVER_REGEX","location":"utils/io.github.xf8b.utils.semver/-semantic-version/-companion/-s-e-m-v-e-r_-r-e-g-e-x.html","searchKeys":["SEMVER_REGEX","const val SEMVER_REGEX: String"]},{"name":"val buildMetadata: String","description":"io.github.xf8b.utils.semver.SemanticVersion.buildMetadata","location":"utils/io.github.xf8b.utils.semver/-semantic-version/build-metadata.html","searchKeys":["buildMetadata","val buildMetadata: String"]},{"name":"val majorVersion: Int","description":"io.github.xf8b.utils.semver.SemanticVersion.majorVersion","location":"utils/io.github.xf8b.utils.semver/-semantic-version/major-version.html","searchKeys":["majorVersion","val majorVersion: Int"]},{"name":"val minorVersion: Int","description":"io.github.xf8b.utils.semver.SemanticVersion.minorVersion","location":"utils/io.github.xf8b.utils.semver/-semantic-version/minor-version.html","searchKeys":["minorVersion","val minorVersion: Int"]},{"name":"val patchVersion: Int","description":"io.github.xf8b.utils.semver.SemanticVersion.patchVersion","location":"utils/io.github.xf8b.utils.semver/-semantic-version/patch-version.html","searchKeys":["patchVersion","val patchVersion: Int"]},{"name":"val preRelease: String","description":"io.github.xf8b.utils.semver.SemanticVersion.preRelease","location":"utils/io.github.xf8b.utils.semver/-semantic-version/pre-release.html","searchKeys":["preRelease","val preRelease: String"]},{"name":"fun toStringVersion(): String","description":"io.github.xf8b.utils.semver.SemanticVersion.toStringVersion","location":"utils/io.github.xf8b.utils.semver/-semantic-version/to-string-version.html","searchKeys":["toStringVersion","fun toStringVersion(): String"]},{"name":"fun <K, V : Comparable<V>> Map<K, V>.sortByValue(): Map<K, V>","description":"io.github.xf8b.utils.sorting.sortByValue","location":"utils/io.github.xf8b.utils.sorting/sort-by-value.html","searchKeys":["sortByValue","fun <K, V : Comparable<V>> Map<K, V>.sortByValue(): Map<K, V>"]}]
